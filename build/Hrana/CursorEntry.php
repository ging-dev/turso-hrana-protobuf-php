<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: proto/common.proto

namespace Hrana;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>hrana.CursorEntry</code>
 */
class CursorEntry extends \Google\Protobuf\Internal\Message
{
    protected $entry;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Hrana\StepBeginEntry $step_begin
     *     @type \Hrana\StepEndEntry $step_end
     *     @type \Hrana\StepErrorEntry $step_error
     *     @type \Hrana\Row $row
     *     @type \Hrana\Error $error
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Proto\Common::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>.hrana.StepBeginEntry step_begin = 1;</code>
     * @return \Hrana\StepBeginEntry|null
     */
    public function getStepBegin()
    {
        return $this->readOneof(1);
    }

    public function hasStepBegin()
    {
        return $this->hasOneof(1);
    }

    /**
     * Generated from protobuf field <code>.hrana.StepBeginEntry step_begin = 1;</code>
     * @param \Hrana\StepBeginEntry $var
     * @return $this
     */
    public function setStepBegin($var)
    {
        GPBUtil::checkMessage($var, \Hrana\StepBeginEntry::class);
        $this->writeOneof(1, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.hrana.StepEndEntry step_end = 2;</code>
     * @return \Hrana\StepEndEntry|null
     */
    public function getStepEnd()
    {
        return $this->readOneof(2);
    }

    public function hasStepEnd()
    {
        return $this->hasOneof(2);
    }

    /**
     * Generated from protobuf field <code>.hrana.StepEndEntry step_end = 2;</code>
     * @param \Hrana\StepEndEntry $var
     * @return $this
     */
    public function setStepEnd($var)
    {
        GPBUtil::checkMessage($var, \Hrana\StepEndEntry::class);
        $this->writeOneof(2, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.hrana.StepErrorEntry step_error = 3;</code>
     * @return \Hrana\StepErrorEntry|null
     */
    public function getStepError()
    {
        return $this->readOneof(3);
    }

    public function hasStepError()
    {
        return $this->hasOneof(3);
    }

    /**
     * Generated from protobuf field <code>.hrana.StepErrorEntry step_error = 3;</code>
     * @param \Hrana\StepErrorEntry $var
     * @return $this
     */
    public function setStepError($var)
    {
        GPBUtil::checkMessage($var, \Hrana\StepErrorEntry::class);
        $this->writeOneof(3, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.hrana.Row row = 4;</code>
     * @return \Hrana\Row|null
     */
    public function getRow()
    {
        return $this->readOneof(4);
    }

    public function hasRow()
    {
        return $this->hasOneof(4);
    }

    /**
     * Generated from protobuf field <code>.hrana.Row row = 4;</code>
     * @param \Hrana\Row $var
     * @return $this
     */
    public function setRow($var)
    {
        GPBUtil::checkMessage($var, \Hrana\Row::class);
        $this->writeOneof(4, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.hrana.Error error = 5;</code>
     * @return \Hrana\Error|null
     */
    public function getError()
    {
        return $this->readOneof(5);
    }

    public function hasError()
    {
        return $this->hasOneof(5);
    }

    /**
     * Generated from protobuf field <code>.hrana.Error error = 5;</code>
     * @param \Hrana\Error $var
     * @return $this
     */
    public function setError($var)
    {
        GPBUtil::checkMessage($var, \Hrana\Error::class);
        $this->writeOneof(5, $var);

        return $this;
    }

    /**
     * @return string
     */
    public function getEntry()
    {
        return $this->whichOneof("entry");
    }

}

