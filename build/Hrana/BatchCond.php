<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: proto/common.proto

namespace Hrana;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>hrana.BatchCond</code>
 */
class BatchCond extends \Google\Protobuf\Internal\Message
{
    protected $cond;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int $step_ok
     *     @type int $step_error
     *     @type \Hrana\BatchCond $not
     *     @type \Hrana\BatchCond\CondList $and
     *     @type \Hrana\BatchCond\CondList $or
     *     @type \Hrana\BatchCond\IsAutocommit $is_autocommit
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Proto\Common::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>uint32 step_ok = 1;</code>
     * @return int
     */
    public function getStepOk()
    {
        return $this->readOneof(1);
    }

    public function hasStepOk()
    {
        return $this->hasOneof(1);
    }

    /**
     * Generated from protobuf field <code>uint32 step_ok = 1;</code>
     * @param int $var
     * @return $this
     */
    public function setStepOk($var)
    {
        GPBUtil::checkUint32($var);
        $this->writeOneof(1, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>uint32 step_error = 2;</code>
     * @return int
     */
    public function getStepError()
    {
        return $this->readOneof(2);
    }

    public function hasStepError()
    {
        return $this->hasOneof(2);
    }

    /**
     * Generated from protobuf field <code>uint32 step_error = 2;</code>
     * @param int $var
     * @return $this
     */
    public function setStepError($var)
    {
        GPBUtil::checkUint32($var);
        $this->writeOneof(2, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.hrana.BatchCond not = 3;</code>
     * @return \Hrana\BatchCond|null
     */
    public function getNot()
    {
        return $this->readOneof(3);
    }

    public function hasNot()
    {
        return $this->hasOneof(3);
    }

    /**
     * Generated from protobuf field <code>.hrana.BatchCond not = 3;</code>
     * @param \Hrana\BatchCond $var
     * @return $this
     */
    public function setNot($var)
    {
        GPBUtil::checkMessage($var, \Hrana\BatchCond::class);
        $this->writeOneof(3, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.hrana.BatchCond.CondList and = 4;</code>
     * @return \Hrana\BatchCond\CondList|null
     */
    public function getAnd()
    {
        return $this->readOneof(4);
    }

    public function hasAnd()
    {
        return $this->hasOneof(4);
    }

    /**
     * Generated from protobuf field <code>.hrana.BatchCond.CondList and = 4;</code>
     * @param \Hrana\BatchCond\CondList $var
     * @return $this
     */
    public function setAnd($var)
    {
        GPBUtil::checkMessage($var, \Hrana\BatchCond\CondList::class);
        $this->writeOneof(4, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.hrana.BatchCond.CondList or = 5;</code>
     * @return \Hrana\BatchCond\CondList|null
     */
    public function getOr()
    {
        return $this->readOneof(5);
    }

    public function hasOr()
    {
        return $this->hasOneof(5);
    }

    /**
     * Generated from protobuf field <code>.hrana.BatchCond.CondList or = 5;</code>
     * @param \Hrana\BatchCond\CondList $var
     * @return $this
     */
    public function setOr($var)
    {
        GPBUtil::checkMessage($var, \Hrana\BatchCond\CondList::class);
        $this->writeOneof(5, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.hrana.BatchCond.IsAutocommit is_autocommit = 6;</code>
     * @return \Hrana\BatchCond\IsAutocommit|null
     */
    public function getIsAutocommit()
    {
        return $this->readOneof(6);
    }

    public function hasIsAutocommit()
    {
        return $this->hasOneof(6);
    }

    /**
     * Generated from protobuf field <code>.hrana.BatchCond.IsAutocommit is_autocommit = 6;</code>
     * @param \Hrana\BatchCond\IsAutocommit $var
     * @return $this
     */
    public function setIsAutocommit($var)
    {
        GPBUtil::checkMessage($var, \Hrana\BatchCond\IsAutocommit::class);
        $this->writeOneof(6, $var);

        return $this;
    }

    /**
     * @return string
     */
    public function getCond()
    {
        return $this->whichOneof("cond");
    }

}

