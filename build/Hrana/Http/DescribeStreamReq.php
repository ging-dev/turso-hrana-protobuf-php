<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: proto/http.proto

namespace Hrana\Http;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>hrana.http.DescribeStreamReq</code>
 */
class DescribeStreamReq extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>optional string sql = 1;</code>
     */
    protected $sql = null;
    /**
     * Generated from protobuf field <code>optional int32 sql_id = 2;</code>
     */
    protected $sql_id = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $sql
     *     @type int $sql_id
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Proto\Http::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>optional string sql = 1;</code>
     * @return string
     */
    public function getSql()
    {
        return isset($this->sql) ? $this->sql : '';
    }

    public function hasSql()
    {
        return isset($this->sql);
    }

    public function clearSql()
    {
        unset($this->sql);
    }

    /**
     * Generated from protobuf field <code>optional string sql = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setSql($var)
    {
        GPBUtil::checkString($var, True);
        $this->sql = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional int32 sql_id = 2;</code>
     * @return int
     */
    public function getSqlId()
    {
        return isset($this->sql_id) ? $this->sql_id : 0;
    }

    public function hasSqlId()
    {
        return isset($this->sql_id);
    }

    public function clearSqlId()
    {
        unset($this->sql_id);
    }

    /**
     * Generated from protobuf field <code>optional int32 sql_id = 2;</code>
     * @param int $var
     * @return $this
     */
    public function setSqlId($var)
    {
        GPBUtil::checkInt32($var);
        $this->sql_id = $var;

        return $this;
    }

}

