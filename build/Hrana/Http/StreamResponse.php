<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: proto/http.proto

namespace Hrana\Http;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>hrana.http.StreamResponse</code>
 */
class StreamResponse extends \Google\Protobuf\Internal\Message
{
    protected $response;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Hrana\Http\CloseStreamResp $close
     *     @type \Hrana\Http\ExecuteStreamResp $execute
     *     @type \Hrana\Http\BatchStreamResp $batch
     *     @type \Hrana\Http\SequenceStreamResp $sequence
     *     @type \Hrana\Http\DescribeStreamResp $describe
     *     @type \Hrana\Http\StoreSqlStreamResp $store_sql
     *     @type \Hrana\Http\CloseSqlStreamResp $close_sql
     *     @type \Hrana\Http\GetAutocommitStreamResp $get_autocommit
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Proto\Http::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>.hrana.http.CloseStreamResp close = 1;</code>
     * @return \Hrana\Http\CloseStreamResp|null
     */
    public function getClose()
    {
        return $this->readOneof(1);
    }

    public function hasClose()
    {
        return $this->hasOneof(1);
    }

    /**
     * Generated from protobuf field <code>.hrana.http.CloseStreamResp close = 1;</code>
     * @param \Hrana\Http\CloseStreamResp $var
     * @return $this
     */
    public function setClose($var)
    {
        GPBUtil::checkMessage($var, \Hrana\Http\CloseStreamResp::class);
        $this->writeOneof(1, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.hrana.http.ExecuteStreamResp execute = 2;</code>
     * @return \Hrana\Http\ExecuteStreamResp|null
     */
    public function getExecute()
    {
        return $this->readOneof(2);
    }

    public function hasExecute()
    {
        return $this->hasOneof(2);
    }

    /**
     * Generated from protobuf field <code>.hrana.http.ExecuteStreamResp execute = 2;</code>
     * @param \Hrana\Http\ExecuteStreamResp $var
     * @return $this
     */
    public function setExecute($var)
    {
        GPBUtil::checkMessage($var, \Hrana\Http\ExecuteStreamResp::class);
        $this->writeOneof(2, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.hrana.http.BatchStreamResp batch = 3;</code>
     * @return \Hrana\Http\BatchStreamResp|null
     */
    public function getBatch()
    {
        return $this->readOneof(3);
    }

    public function hasBatch()
    {
        return $this->hasOneof(3);
    }

    /**
     * Generated from protobuf field <code>.hrana.http.BatchStreamResp batch = 3;</code>
     * @param \Hrana\Http\BatchStreamResp $var
     * @return $this
     */
    public function setBatch($var)
    {
        GPBUtil::checkMessage($var, \Hrana\Http\BatchStreamResp::class);
        $this->writeOneof(3, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.hrana.http.SequenceStreamResp sequence = 4;</code>
     * @return \Hrana\Http\SequenceStreamResp|null
     */
    public function getSequence()
    {
        return $this->readOneof(4);
    }

    public function hasSequence()
    {
        return $this->hasOneof(4);
    }

    /**
     * Generated from protobuf field <code>.hrana.http.SequenceStreamResp sequence = 4;</code>
     * @param \Hrana\Http\SequenceStreamResp $var
     * @return $this
     */
    public function setSequence($var)
    {
        GPBUtil::checkMessage($var, \Hrana\Http\SequenceStreamResp::class);
        $this->writeOneof(4, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.hrana.http.DescribeStreamResp describe = 5;</code>
     * @return \Hrana\Http\DescribeStreamResp|null
     */
    public function getDescribe()
    {
        return $this->readOneof(5);
    }

    public function hasDescribe()
    {
        return $this->hasOneof(5);
    }

    /**
     * Generated from protobuf field <code>.hrana.http.DescribeStreamResp describe = 5;</code>
     * @param \Hrana\Http\DescribeStreamResp $var
     * @return $this
     */
    public function setDescribe($var)
    {
        GPBUtil::checkMessage($var, \Hrana\Http\DescribeStreamResp::class);
        $this->writeOneof(5, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.hrana.http.StoreSqlStreamResp store_sql = 6;</code>
     * @return \Hrana\Http\StoreSqlStreamResp|null
     */
    public function getStoreSql()
    {
        return $this->readOneof(6);
    }

    public function hasStoreSql()
    {
        return $this->hasOneof(6);
    }

    /**
     * Generated from protobuf field <code>.hrana.http.StoreSqlStreamResp store_sql = 6;</code>
     * @param \Hrana\Http\StoreSqlStreamResp $var
     * @return $this
     */
    public function setStoreSql($var)
    {
        GPBUtil::checkMessage($var, \Hrana\Http\StoreSqlStreamResp::class);
        $this->writeOneof(6, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.hrana.http.CloseSqlStreamResp close_sql = 7;</code>
     * @return \Hrana\Http\CloseSqlStreamResp|null
     */
    public function getCloseSql()
    {
        return $this->readOneof(7);
    }

    public function hasCloseSql()
    {
        return $this->hasOneof(7);
    }

    /**
     * Generated from protobuf field <code>.hrana.http.CloseSqlStreamResp close_sql = 7;</code>
     * @param \Hrana\Http\CloseSqlStreamResp $var
     * @return $this
     */
    public function setCloseSql($var)
    {
        GPBUtil::checkMessage($var, \Hrana\Http\CloseSqlStreamResp::class);
        $this->writeOneof(7, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.hrana.http.GetAutocommitStreamResp get_autocommit = 8;</code>
     * @return \Hrana\Http\GetAutocommitStreamResp|null
     */
    public function getGetAutocommit()
    {
        return $this->readOneof(8);
    }

    public function hasGetAutocommit()
    {
        return $this->hasOneof(8);
    }

    /**
     * Generated from protobuf field <code>.hrana.http.GetAutocommitStreamResp get_autocommit = 8;</code>
     * @param \Hrana\Http\GetAutocommitStreamResp $var
     * @return $this
     */
    public function setGetAutocommit($var)
    {
        GPBUtil::checkMessage($var, \Hrana\Http\GetAutocommitStreamResp::class);
        $this->writeOneof(8, $var);

        return $this;
    }

    /**
     * @return string
     */
    public function getResponse()
    {
        return $this->whichOneof("response");
    }

}

